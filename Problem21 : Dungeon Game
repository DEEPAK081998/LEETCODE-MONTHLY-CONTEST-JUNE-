class Solution {
    public int calculateMinimumHP(int[][] dungeon) {
        int dp[][] = new int [dungeon.length][dungeon[0].length];
        
        dp[dungeon.length-1][dungeon[0].length-1] = (-dungeon[dungeon.length-1][dungeon[0].length-1] + 1);
        
        for(int i=dungeon.length-1;i>=0;i--){
            for(int j = dungeon[0].length-1; j>=0;j--){
                if(i==dungeon.length-1 && j==dungeon[0].length-1){
                    if(dungeon[i][j]>=0){
                        dp[i][j]=1;
                    }else{
                        dp[i][j] = -dungeon[i][j]+1;
                    }
                }else if(i == dungeon.length-1){
                    dp[i][j]= -dungeon[i][j] + dp[i][j+1];
                    if(dp[i][j] <= 0){
                        dp[i][j] = 1;
                    }
                }else if(j == dungeon[0].length-1){
                    dp[i][j]= -dungeon[i][j] + dp[i+1][j];
                    if(dp[i][j] <= 0){
                        dp[i][j] = 1;
                    }
                }else{
                    int ele = Math.min(dp[i][j+1], dp[i+1][j]);
                    dp[i][j]= -dungeon[i][j] + ele;
                    if(dp[i][j] <= 0){
                        dp[i][j] = 1;
                    }
                }
            }    
        }
        
        
        //PRINTING DP
        // for(int i=0;i<dungeon.length;i++){
        //     for(int j=0;j<dungeon[0].length;j++){
        //         System.out.print(dp[i][j]+" ");
        //     }
        //     System.out.println();
        // }
        
        return dp[0][0];
    }
}
